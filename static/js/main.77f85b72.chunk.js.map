{"version":3,"sources":["components/Container/Container.js","components/Container/index.js","components/FeedbackOptions/FeedbackBtn.js","components/Notification/Notification.js","components/Statistics/index.js","components/Statistics/Statistics.js","components/FeedbackOptions/index.js","components/FeedbackOptions/FeedbackOptions.js","App.js","index.js"],"names":["Container","title","children","className","defaultProps","FeedbackBtn","options","feedbackClick","map","option","type","onClick","Notification","message","Statistics","good","neutral","bad","total","positiveFeedback","FeedbackOptions","useState","setGood","setNeutral","setBad","countTotalFeedback","keys","Object","e","target","textContent","Math","round","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAKMA,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC1B,OACE,sBAAKC,UAAU,mBAAf,UACGF,GAAS,6BAAKA,IAEf,8BAAMC,QAUZF,EAAUI,aAAe,CACvBH,MAAO,IAGMD,ICtBAA,EDsBAA,E,OEEAK,G,MAtBK,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,cAC9B,OACE,mCACGD,EAAQE,KAAI,SAACC,GAAD,OACX,wBACEN,UAAU,wBACVO,KAAK,SAELC,QAASJ,EAJX,SAMGE,GAHIA,UCRTG,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,qBAAKV,UAAU,sBAAf,SACE,6BAAKU,OASXD,EAAaR,aAAe,CAC1BS,QAAS,IAGID,QCjBAE,ECEI,SAAC,GAMb,IAAD,IALJC,YAKI,MALG,EAKH,MAJJC,eAII,MAJM,EAIN,MAHJC,WAGI,MAHE,EAGF,MAFJC,aAEI,MAFI,EAEJ,MADJC,wBACI,MADe,EACf,EACJ,OAAiB,IAAVD,EACL,cAAC,EAAD,CAAcL,QAAQ,sBAEtB,sBAAKV,UAAU,oBAAf,UACE,6CACA,+BACE,wCACQ,4BAAIY,OAEZ,2CACW,4BAAIC,OAEf,uCACO,4BAAIC,OAEX,yCACS,4BAAIC,OAEb,qDACqB,4BAAIC,IADzB,cC3BOC,MCOA,WACb,MAAwBC,mBAAS,GAAjC,mBAAON,EAAP,KAAaO,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOL,EAAP,KAAgBO,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOJ,EAAP,KAAYO,EAAZ,KAEMC,EAAqB,WACzB,OAAOV,EAAOC,EAAUC,GA6BpBS,EAAOC,OAAOD,KAAK,CAAEX,OAAMC,UAASC,QAE1C,OACE,qCACE,oBAAId,UAAU,GAAd,mCAEA,cAAC,EAAD,CAEEG,QAASoB,EACTnB,cA/BgB,SAACqB,GAIrB,OAHcA,EAAEC,OAAOC,aAIrB,IAAK,OACHR,EAAQP,EAAO,GACf,MAEF,IAAK,UACHQ,EAAWP,EAAU,GACrB,MAEF,IAAK,MACHQ,EAAOP,EAAM,GACb,MAEF,QACE,WAgBF,kCAC4B,IAAzBQ,IACC,cAAC,EAAD,CAAcZ,QAAQ,sBAEtB,cAAC,EAAD,CACEE,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOO,IACPN,iBA9CDY,KAAKC,MAAQjB,EAAOU,IAAwB,IAAQ,KAAO,UCZvD,SAASQ,IACtB,OACE,cAAC,EAAD,UACE,cAAC,EAAD,MCLNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.77f85b72.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n//styles\r\nimport \"./Container.css\";\r\n\r\nconst Container = ({ title, children }) => {\r\n  return (\r\n    <div className=\"ContainerWrapper\">\r\n      {title && <h1>{title}</h1>}\r\n\r\n      <div>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string,\r\n};\r\n\r\nContainer.defaultProps = {\r\n  title: \"\",\r\n};\r\n\r\nexport default Container;\r\n","import Container from './Container';\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./FeedbackOptions.css\";\r\n\r\nconst FeedbackBtn = ({ options, feedbackClick }) => {\r\n  return (\r\n    <>\r\n      {options.map((option) => (\r\n        <button\r\n          className=\"FeedbackOption_button\"\r\n          type=\"button\"\r\n          key={option}\r\n          onClick={feedbackClick}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackBtn.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  feedbackClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackBtn;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <div className=\"NotificationWrapper\">\r\n      <h1>{message}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nNotification.defaultProps = {\r\n  message: '',\r\n};\r\n\r\nexport default Notification;\r\n","import Statistics from './Statistics';\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Notification from \"../Notification/Notification\";\r\n\r\nconst Statistics = ({\r\n  good = 0,\r\n  neutral = 0,\r\n  bad = 0,\r\n  total = 0,\r\n  positiveFeedback = 0,\r\n}) => {\r\n  return total === 0 ? (\r\n    <Notification message=\"No feedback given\"></Notification>\r\n  ) : (\r\n    <div className=\"StatisticsWrapper\">\r\n      <h1>Statistics:</h1>\r\n      <ul>\r\n        <li>\r\n          Good: <b>{good}</b>\r\n        </li>\r\n        <li>\r\n          Neutral: <b>{neutral}</b>\r\n        </li>\r\n        <li>\r\n          Bad: <b>{bad}</b>\r\n        </li>\r\n        <li>\r\n          Total: <b>{total}</b>\r\n        </li>\r\n        <li>\r\n          Positive feedback: <b>{positiveFeedback}</b>%\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positiveFeedback: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import FeedbackOptions from './FeedbackOptions';\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nimport FeedbackBtn from \"./FeedbackBtn\";\r\nimport Statistics from \"../Statistics\";\r\nimport Notification from \"../Notification/Notification\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Feedback() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const countTotalFeedback = () => {\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  const positivePercentage = () => {\r\n    return Math.round(((good / countTotalFeedback()) * 1000) / 10) || 0;\r\n  };\r\n\r\n  const feedbackClick = (e) => {\r\n    const value = e.target.textContent;\r\n    // const feedbackElement = (prevState) => ({ [value]: prevState[value] + 1 });\r\n\r\n    switch (value) {\r\n      case \"good\":\r\n        setGood(good + 1);\r\n        break;\r\n\r\n      case \"neutral\":\r\n        setNeutral(neutral + 1);\r\n        break;\r\n\r\n      case \"bad\":\r\n        setBad(bad + 1);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const keys = Object.keys({ good, neutral, bad });\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"\">Please leave feedback</h1>\r\n\r\n      <FeedbackBtn\r\n        //options={[\"good\", \"neutral\", \"bad\"]}\r\n        options={keys}\r\n        feedbackClick={feedbackClick}\r\n      />\r\n\r\n      <section>\r\n        {countTotalFeedback() === 0 ? (\r\n          <Notification message=\"No feedback given\" />\r\n        ) : (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={countTotalFeedback()}\r\n            positiveFeedback={positivePercentage()}\r\n          />\r\n        )}\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nFeedback.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  positiveFeedback: PropTypes.func,\r\n  feedbackClick: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\n//styles\r\nimport \"./App.css\";\r\n//components\r\nimport Container from \"./components/Container\";\r\nimport Feedback from \"./components/FeedbackOptions\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Container>\r\n      <Feedback />\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}